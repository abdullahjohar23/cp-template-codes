#include <bits/stdc++.h>

using namespace std ;

// Big Numbers Addition
string bigSum(string str1, string str2) {
    // Before proceeding further, make sure length
    // of str2 is larger.
    if (str1.length() > str2.length())
        swap(str1, str2);
 
    // Take an empty string for storing result
    string str = "";
 
    // Calculate length of both string
    int n1 = str1.length(), n2 = str2.length();
 
    // Reverse both of strings
    reverse(str1.begin(), str1.end());
    reverse(str2.begin(), str2.end());
 
    int carry = 0;
    for (int i = 0; i < n1; i++) {
        // Do school mathematics, compute sum of
        // current digits and carry
        int sum = ((str1[i]-'0') + (str2[i]-'0') + carry);
        str.push_back(sum % 10 + '0');
 
        // Calculate carry for next step
        carry = sum / 10;
    }
 
    // Add remaining digits of larger number
    for (int i = n1; i < n2; i++) {
        int sum = ((str2[i] - '0') + carry);
        str.push_back(sum % 10 + '0');
        carry = sum / 10;
    }
 
    // Add remaining carry
    if (carry)
        str.push_back(carry + '0');
 
    // reverse resultant string
    reverse(str.begin(), str.end());
 
    return str;
}

int main()
{
    ios_base::sync_with_stdio(false) ;
    cin.tie(NULL) ;
    cout.tie(NULL) ;

    string str1, str2, sum;
    int t;
    cin >> t;

    while (t--) {
        cin >> str1 >> str2;

        sum = bigSum (str1, str2) ;
            
        cout << sum << endl;
    }
	
    return 0;
}

/*

Input
7
123 321
321 123
123 123
589 590
1 10
123456 123
123 123456

Output
444
444
246
1179
11
123579
123579

*/