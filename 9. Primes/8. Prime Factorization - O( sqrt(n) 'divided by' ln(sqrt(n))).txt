#include<bits/stdc++.h>

using namespace std;

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    long long n, count ;
    cin >> n ;

    // O(sqrt(N)) Prime Factorizaation
    for (int i = 2; i * i <= n; i++) {
        while (n % i == 0) {
            n /= i ;
            cout << i << " " ;
        }
    }
    // In case the input itself is a prime number, because the number itself doesn't exist in i <= sqrt(n)
    if (n > 1) {
        cout << n << endl;
    }

    return 0;
}

// Input : 1677060
// Output: 2 2 3 3 5 7 11 11 11 [ (2^2)*(3^2)*(5^1)*(7^1)*(11^3) ]

// Input : 7
// Output: 7 [(7^1)] [ It would have not printed if the special case wasn't handled ]

// Input : 1299721
// Output: 1299721 [(1299721^1)] [ It would have not printed if the special case wasn't handled ]