#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace std;
using namespace __gnu_pbds;

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    priority_queue <int> pq1; // max heap priority queue
    priority_queue <int, vector<int>, greater<int>> pq2; // min heap priority queue
    
    int n, a;
    cin >> n;

    for (int i = 0; i < n; i++) {
        cin >> a;
        pq1.push(a); pq2.push(a);
    }

    while (!pq2.empty()) {
        cout << pq2.top() << ' ';
        pq2.pop();
    }

    cout << endl;

    while (!pq1.empty()) {
        cout << pq1.top() << ' ';
        pq1.pop();
    }
    
    return 0;
}

/*

Input
10
3 1 3 5 4 5 2 5 4 1

Output
1 1 2 3 3 4 4 5 5 5  -> min heap priority queue
5 5 5 4 4 3 3 2 1 1  -> max heap priority queue

*/