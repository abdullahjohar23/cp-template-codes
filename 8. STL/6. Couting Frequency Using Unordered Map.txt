#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace std;
using namespace __gnu_pbds;

tree <int, null_type, less <int>, rb_tree_tag, tree_order_statistics_node_update> oderedSet;

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    int n; cin >> n;
    int arr[n];

    for (int i = 0; i < n; i++) {
        cin >> arr[i];
    }

    unordered_map <int, int> mp; // key will not be sorted like map, key will be random

    for (int i = 0; i < n; i++) {
        mp[arr[i]]++;
    }

    cout << "Key\tValue" << endl; 
    
    for (auto it : mp) {
        cout << it.first << "\t" << it.second << endl;
    }
    
    return 0;
}

/*

Input
12
1 3 2 5 4 5 4 1 1 1 4 2

Output
Key	Value
4	3
5	2
2	2
1	4
3	1

*/