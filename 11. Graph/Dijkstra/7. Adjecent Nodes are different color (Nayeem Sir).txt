#include <bits/stdc++.h>
using namespace std;
 
#define WHITE 0
#define RED 1
#define BLUE 2

vector<int>adjList[1000];
bool visited[9][9];
int dis[9][9];
 
int moveX[] = {-1, 1, 2, 2, 1, -1, -2, -2};
int moveY[] = {-2, -2, -1, 1, 2, 2, 1, -1};
 
void BFS(pair<int, int> source, pair<int, int> dest)
{
    queue<pair<int, int>>Q;
    Q.push(source);
    dis[source.first][source.second] = 0;
 
    while (!Q.empty()) {
        pair<int, int> u = Q.front();
        pair<int, int> v;
        Q.pop();
 
        for (int i = 0; i < 8; i++) {
            v.first = u.first + moveX[i];
            v.second = u.second + moveY[i];
 
            if (v.first < 1 || v.first > 8 || v.second < 1 || v.second > 8) {
                continue;
            }
            if (dis[v.first][v.second] == -1) {
                dis[v.first][v.second] = dis[u.first][u.second] + 1;
            }
        }
    }
}
 
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

    return 0;
}