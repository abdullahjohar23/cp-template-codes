#include <bits/stdc++.h>

using namespace std;

vector <int> v[1001];
long long vis[1002], dis[1001];

void dfs (long long node, long long d) {
    vis[node] = 1;
    dis[node] = d;
    
    for (int i = 0; i < v[node].size(); i++) {
        if (vis[v[node][i]] == 0) {
            dfs(v[node][i], d+1);
        }
    }
}

int main() 
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    
    long long n, m, x, y;

    cin >> n >> m;
    
    while (m--) {
        cin >> x >> y;
        v[x].push_back(y);
        v[y].push_back(x);
    }

    long long node;
    cin >> node;

    dfs(node, 0);

    for(int i = 1; i <= n; i++) {
        cout << node << " to " << i << " dis " << dis[i] << endl;
    }

    return 0;
}

// Input
// 6 5
// 1 2
// 1 3
// 2 4
// 2 5
// 3 6
// 6

// // Output
// 6 to 1 dis 2
// 6 to 2 dis 3
// 6 to 3 dis 1
// 6 to 4 dis 4
// 6 to 5 dis 4
// 6 to 6 dis 0