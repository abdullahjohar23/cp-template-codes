#include <bits/stdc++.h>

using namespace std ;

long long merge (long long arr[], long long l, long long mid, long long r) {
    long long inv = 0 ;
    long long n1 = mid-l+1 ;
    long long n2 = r - mid ;
    long long a[n1] ;
    long long b[n2] ;

    for(long long i = 0 ; i < n1 ; i++) {
        a[i] = arr[l+i] ;
    }

    for(long long i = 0 ; i < n2 ; i++) {
        b[i] = arr[mid+i+1] ;
    }
    long long i = 0,j = 0, k = l ;

    while (i < n1 && j < n2) {
        if (a[i] <= b[j]) {
            arr[k] = a[i] ;
            k++ ;
            i++ ;
        } else {
            arr[k] = b[j] ;
            inv += n1 - i ;
            k++ ;
            j++ ;
        }
    }
    while (i < n1) {
        arr[k] = a[i] ;
        k++ ;
        i++ ;
    }
    while (j < n2) {
        arr[k] = b[j] ;
        k++ ;
        j++ ;
    }

    return inv ;
}

long long mergeSort (long long arr[], long long l, long long r) {
    long long inv = 0 ;

    if(l < r){
        long long mid = (l + r) / 2 ;
        inv += mergeSort(arr, l, mid) ;
        inv += mergeSort(arr, mid + 1, r) ;
        inv += merge(arr, l, mid, r) ;
    }
    return inv ;
}

int main()
{
    ios_base::sync_with_stdio(false)  ;
    cin.tie(NULL)  ;
    cout.tie(NULL)  ;

    long long t ; cin >> t ;

    while (t--) {
        long long n ; cin >> n ;
        long long arr[n] ;

        for(long long i = 0; i < n; i++){
            cin >> arr[i] ;
        }

        cout << mergeSort(arr, 0, n-1) << endl ;
    }

    return 0 ;
}